# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - main
    tags:
      # - 'v*'    # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'v*'
  pull_request:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '21.x'
    - name: Install pnpm
      run: npm install -g pnpm
    - name: install deps
      run: pnpm install

    - name: build site
      run: pnpm build

    - name: Upload extension
      uses: actions/upload-artifact@v3
      with:
        # Name of the artifact
        name: browser-extension
        path: packages/browser-extension/dist
        retention-days: 10

    - name: Deploy to GitHub Pages
      uses: Cecilapp/GitHub-Pages-deploy@3.1.0
      # skip deployment for now
      if: 0 == 1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        email: okarl@outlook.com
        branch: gh-pages   # optional
        build_dir: packages/website/dist # folder the action should deploy.
        jekyll: no

  upload-tag-attachment:
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: browser-extension
        path: packages/browser-extension/dist
    - name: Upload tag attachment
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: packages/browser-extension/dist
        asset_name: browser-extension.zip
        asset_content_type: application/zip
